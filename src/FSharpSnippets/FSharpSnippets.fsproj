<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>9746ae74-5735-4539-b80a-64615c6995c8</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>FSharpSnippets</RootNamespace>
    <AssemblyName>FSharpSnippets</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <TargetFSharpCoreVersion>4.4.0.0</TargetFSharpCoreVersion>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <Name>FSharpSnippets</Name>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <Tailcalls>false</Tailcalls>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <DocumentationFile>bin\FSharpSnippets.XML</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>3</WarningLevel>
    <DocumentationFile>bin\FSharpSnippets.XML</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup>
    <MinimumVisualStudioVersion Condition="'$(MinimumVisualStudioVersion)' == ''">11</MinimumVisualStudioVersion>
  </PropertyGroup>
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '11.0'">
      <PropertyGroup Condition="Exists('$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets')">
        <FSharpTargetsPath>$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets</FSharpTargetsPath>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup Condition="Exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\FSharp\Microsoft.FSharp.Targets')">
        <FSharpTargetsPath>$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\FSharp\Microsoft.FSharp.Targets</FSharpTargetsPath>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  <Import Project="$(FSharpTargetsPath)" />
  <ItemGroup>
    <Compile Include="AssemblyInfo.fs" />
    <Content Include="packages.config" />
    <None Include="Abstracting over %27M%27.fsx" />
    <None Include="Eff via delimited continuations.fsx" />
    <None Include="Life.fsx" />
    <None Include="Countdown.fsx" />
    <None Include="Staged Trampoline.fsx" />
    <None Include="Staged typed formatting.fsx" />
    <None Include="From Löb%27s Theorem to Spreadsheet Evaluation %28memoized%29.fsx" />
    <None Include="Staged Free Monads.fsx" />
    <None Include="Lightweight Staged Numeric code.fsx" />
    <None Include="Equality Type.fsx" />
    <None Include="Staged Functional Unparsing.fsx" />
    <None Include="Quotations to A-Normal form.fsx" />
    <None Include="Staged Reducers.fsx" />
    <None Include="Staged Regular Expression Matcher.fsx" />
    <None Include="Functional style Regex engine.fsx" />
    <None Include="Fixed-point ﬁnding function.fsx" />
    <None Include="LazyList.fsx" />
    <None Include="Infinite sequences.fsx" />
    <None Include="Clojure atom memoization example.fsx" />
    <None Include="A Lazy fixed-point combinator.fsx" />
    <None Include="Functor - Applicative - Monad.fsx" />
    <None Include="The repmin problem.fsx" />
    <None Include="Hughes%27s FuncList.fsx" />
    <None Include="Functional Unparsing SQL.fsx" />
    <None Include="Erik Lippert%27s Comma Quibbling.fsx" />
    <None Include="Scrap Your Boilerplate.fsx" />
    <None Include="Polyvariadic fixpoint.fsx" />
    <None Include="n-ary Seq.map %28Numerals%29.fsx" />
    <None Include="Dining philosophers %28Joinads%29.fsx" />
    <None Include="Scrap Your Boilerplate %28with class%29.fsx" />
    <None Include="HLists, Peano - Type-level computations.fsx" />
    <None Include="Monadic Trampoline.fsx" />
    <None Include="Church numerals.fsx" />
    <None Include="GC Friendly Fixpoint.fsx" />
    <None Include="Loop Unrolling.fsx" />
    <None Include="Session Types.fsx" />
    <None Include="Effects and Handlers.fsx" />
    <None Include="Normalisation by evaluation.fsx" />
    <None Include="Staged Fixed-point combinator.fsx" />
    <None Include="Yet another staged fixed-point combinator.fsx" />
    <None Include="Type-level Fold.fsx" />
    <None Include="Generic Numeric Literals and Compile time Peano arithmetic.fsx" />
    <None Include="Clojure%27s Atoms.fsx" />
    <None Include="A simple Quine.fsx" />
    <None Include="Monadic Memoization.fsx" />
    <None Include="Actors acting as Lambdas.fsx" />
    <None Include="Type based Regex Active Patterns.fsx" />
    <None Include="Hughes%27s CPSFuncList.fsx" />
    <None Include="Norvig%27s Spelling Corrector.fsx" />
    <None Include="Monadic Retry.fsx" />
    <None Include="n-ary Seq map.fsx" />
    <None Include="Bananas.fsx" />
    <None Include="Lazy Xml.fsx" />
    <None Include="Y%28n%29 Polyvariadic fixpoint.fsx" />
    <None Include="Unlambda.fsx" />
    <None Include="Async Choice.fsx" />
    <None Include="Type Safe Higher-order abstract syntax.fsx" />
    <None Include="Generic Collections, Type Classes and friends.fsx" />
    <None Include="Delimited continuations.fsx" />
    <None Include="Type-level SAT solver.fsx" />
    <None Include="Lazy fixed-point and Infinite Streams.fsx" />
    <None Include="Stage your boilerplate.fsx" />
    <None Include="Staged Ackermann.fsx" />
    <None Include="Reducers.fsx" />
    <None Include="Staged CPS Regular Expression Matcher.fsx" />
    <None Include="Staged parser combinators.fsx" />
    <None Include="Staged Monoidal Folds.fsx" />
    <None Include="From Löb%27s Theorem to Spreadsheet Evaluation.fsx" />
    <None Include="Staged HOAS.fsx" />
    <None Include="Staged Ziria Streams.fsx" />
    <Compile Include="Static.fs" />
    <None Include="Staged Parallel Ziria Streams.fsx" />
    <None Include="yin-yang puzzle.fsx" />
    <None Include="Evens and Odds via Z3.fsx" />
    <None Include="Eternity2.fsx" />
    <None Include="Eff.fsx" />
    <None Include="YIntensional.fsx" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="FSharp.Compiler.Service">
      <HintPath>packages\FSharp.Compiler.Service.1.3.1.0\lib\net45\FSharp.Compiler.Service.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="FSharp.PowerPack">
      <HintPath>packages\FSPowerPack.Core.Community.2.0.0.0\lib\Net40\FSharp.PowerPack.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="FSharp.PowerPack.Linq">
      <HintPath>packages\FSPowerPack.Linq.Community.2.0.0.0\lib\Net40\FSharp.PowerPack.Linq.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="FSharp.PowerPack.Metadata">
      <HintPath>packages\FSPowerPack.Metadata.Community.2.0.0.0\lib\Net40\FSharp.PowerPack.Metadata.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="FSharp.PowerPack.Parallel.Seq">
      <HintPath>packages\FSPowerPack.Parallel.Seq.Community.2.0.0.0\lib\Net40\FSharp.PowerPack.Parallel.Seq.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Microsoft.Z3">
      <HintPath>packages\z3x64win.4.5.0.1\lib\Microsoft.Z3.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="mscorlib" />
    <Reference Include="FSharp.Core, Version=$(TargetFSharpCoreVersion), Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
      <Private>True</Private>
    </Reference>
    <Reference Include="QuotationCompiler">
      <HintPath>packages\QuotationCompiler.0.0.7-alpha\lib\net45\QuotationCompiler.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
  </ItemGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>